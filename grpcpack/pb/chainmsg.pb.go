// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chainmsg.proto

package rpc_btc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type AddressRequest struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8380b8d99192274c, []int{0}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

// The response message containing the greetings
type AddressReply struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressReply) Reset()         { *m = AddressReply{} }
func (m *AddressReply) String() string { return proto.CompactTextString(m) }
func (*AddressReply) ProtoMessage()    {}
func (*AddressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8380b8d99192274c, []int{1}
}

func (m *AddressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressReply.Unmarshal(m, b)
}
func (m *AddressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressReply.Marshal(b, m, deterministic)
}
func (m *AddressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressReply.Merge(m, src)
}
func (m *AddressReply) XXX_Size() int {
	return xxx_messageInfo_AddressReply.Size(m)
}
func (m *AddressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddressReply proto.InternalMessageInfo

func (m *AddressReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*AddressRequest)(nil), "rpc.btc.AddressRequest")
	proto.RegisterType((*AddressReply)(nil), "rpc.btc.AddressReply")
}

func init() { proto.RegisterFile("chainmsg.proto", fileDescriptor_8380b8d99192274c) }

var fileDescriptor_8380b8d99192274c = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xce, 0x48, 0xcc,
	0xcc, 0xcb, 0x2d, 0x4e, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x2a, 0x48, 0xd6,
	0x4b, 0x2a, 0x49, 0x56, 0x52, 0xe3, 0xe2, 0x73, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x0e, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0xcd, 0x49, 0x4c, 0x4a, 0xcd, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x94, 0x34, 0xb8, 0x78, 0xe0, 0xea, 0x0a, 0x72, 0x2a,
	0x85, 0x24, 0xb8, 0xd8, 0x13, 0x21, 0x7c, 0xa8, 0x3a, 0x18, 0xd7, 0xc8, 0x9f, 0x8b, 0xcb, 0xa9,
	0x24, 0x39, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x91, 0x8b, 0xd7, 0x3d, 0xb5, 0xc4,
	0x2f, 0xb5, 0x1c, 0xaa, 0x5b, 0x48, 0x5c, 0x0f, 0x6a, 0xb5, 0x1e, 0xaa, 0xbd, 0x52, 0xa2, 0x98,
	0x12, 0x05, 0x39, 0x95, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x27, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xea, 0xa1, 0x35, 0x1c, 0xc4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BtcServiceClient is the client API for BtcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BtcServiceClient interface {
	GetNewAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressReply, error)
}

type btcServiceClient struct {
	cc *grpc.ClientConn
}

func NewBtcServiceClient(cc *grpc.ClientConn) BtcServiceClient {
	return &btcServiceClient{cc}
}

func (c *btcServiceClient) GetNewAddress(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*AddressReply, error) {
	out := new(AddressReply)
	err := c.cc.Invoke(ctx, "/rpc.btc.BtcService/GetNewAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BtcServiceServer is the server API for BtcService service.
type BtcServiceServer interface {
	GetNewAddress(context.Context, *AddressRequest) (*AddressReply, error)
}

// UnimplementedBtcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBtcServiceServer struct {
}

func (*UnimplementedBtcServiceServer) GetNewAddress(ctx context.Context, req *AddressRequest) (*AddressReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNewAddress not implemented")
}

func RegisterBtcServiceServer(s *grpc.Server, srv BtcServiceServer) {
	s.RegisterService(&_BtcService_serviceDesc, srv)
}

func _BtcService_GetNewAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BtcServiceServer).GetNewAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.btc.BtcService/GetNewAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BtcServiceServer).GetNewAddress(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BtcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.btc.BtcService",
	HandlerType: (*BtcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNewAddress",
			Handler:    _BtcService_GetNewAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chainmsg.proto",
}
