# this document is DEPRECATED


100万用户连接的OTC单机,最大需要配置24G内存，需要完成的是：

架构上to do：
1. 允许最多100万用户连接到单机节点
2. 消息系统解耦和横向扩容：用户提交到节点的订单，首先写入另一个分布式的kalfka集群，确保不丢失
3. 然后每一秒钟从消息队列里取出来未下发的消息，集中一起下发给100万个用户
4. 消息最好是换成二进制的，比如使用google的protoBuf，因为json的解码比较慢
5. OTC节点横向扩容，如果用户量暴增，只需要增加节点，部署好OTC的软件，就可以自动处理
6. 每个OTC节点自动往消息队列写入客户端提交的订单，自动从消息队列提取未处理的订单下发给各自的用户
7. 单机能够承受的压力需要有测试报告

用户逻辑：
1. 用户A在终端点击某个挂单，进入挂单的细节，挂单是用户B提交的。如果接着点击购买，即锁定这个挂单的账户，生成收款二维码，等待用户付款
2. 如果用户在指定的15分钟内未付款，则锁定取消
3. 如果用户完成付款，则通知挂单的用户B，告知B已经收到款，保存在Omni OTC的监管账户里，B需要在多少时间内完成转账到监管账户
4. 如果B没有转账，则退款给A
5. 如果B转账了，则把A在监管账户的币转给B，同时把B转入监管账户的币转给A

运行步骤：
1. 运行goMatchingEngine/OTC/下面的debug，这个是OTC服务器，出现命令行运行界面
2. 用浏览器打开goMatchingEngine/OTCClient/下面的OTC_html_client.html，可以打开多个浏览器
3. 命令行界面应该显示有新的客户端接入。
4. 可以输入消息，多个浏览器窗口同步都发送
5. 如果OTC服务器和浏览器是在一台主机上，有可能网页连接不上OTC服务器，不知道为什么。所以OTC服务器可以部署到另一个局域网的机器上，或者虚拟机中
