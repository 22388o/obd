package rpc

import (
	"encoding/hex"
	"log"
	"testing"
)

func init() {
	log.SetFlags(log.Ldate | log.Ltime | log.Lshortfile)
}

func TestClient_GetMiningInfo(t *testing.T) {

	client := NewClient()

	rsmcHex := "0200000001b780c6a4f015fc82c1a06f769e8a9fbf24dba420b1871705144729064ddf57a800000000d900473044022060ea2f21f717108999e03beb8b7e40041c9a88e15aeb920ab4d679923dc30a0b0220718f345f86b8681b84dea86318c6acdbf993929ba32f8d806a2fd0a7c48f834101473044022045dea30c76b5a2aa1dd8f241a8098c5862c8547ed85c6716eabeb31324b445c002203bb0ee040a256f1e64a288c2e81762ef22efbf100390fe65aff263e1bfb84e50014752210238b21ae976c7059057b2b973fec5be8c7b37cea1b15aff52ecf309d5f527e76e21038097033cb34a88b8bfc052adbbfefa8e92c33b7635e30c7a79d90ff4917c6c0b52aeffffffff033c1b00000000000017a914a1617398d1a34529bbd35eeb5c30a4ce20a73d2b870000000000000000166a146f6d6e69000000000000008900000000058b1140220200000000000017a914a1617398d1a34529bbd35eeb5c30a4ce20a73d2b8700000000"
	accept, err := client.TestMemPoolAccept(rsmcHex)
	log.Println(err)
	log.Println(accept)

	//client.SendRawTransaction(rsmcHex)

	brhex := "0200000002ac5a7c14bf3a63944b50333e12263213fdf59eacfc1a60af27298324db736aea00000000da00473044022052864a0e9a3ba7175506b6aaf21229fed03ca05c42846de050e53603c55ff37302204b3f484f91f3e4ac799a98afca351309921c857c38298e351ca5a0328b37291101483045022100c4acce9704328d6ffd85e1c4cd358b999c9590adff9db3ddf24a388f282cc8cf022024660b7321d7502e4ca71b989cda642d676714c400a6bbc4b5f2dd205f512d0c0147522103d2586577e2f4460b1c299f4f74b719982c1982f31e48ca1ef406347472fa611221038097033cb34a88b8bfc052adbbfefa8e92c33b7635e30c7a79d90ff4917c6c0b52aeffffffffac5a7c14bf3a63944b50333e12263213fdf59eacfc1a60af27298324db736aea02000000da00483045022100aca54fff2febbbefcae06c4e942a8e9a8a39960cc5ab74a7e3177691410ca6c102201346b25d557d1bf5f469df34e4bf259bc539ead68d0fd9587c2a55ead87cd2b1014730440220701fde05a432c78f541aaa4e10a714e79a60daa3d764d0830ca2195d7d85f325022053cf5f59dad9e3322df53990eea4a6fe4aa2455d63e72bbabe07cc3189ca69fe0147522103d2586577e2f4460b1c299f4f74b719982c1982f31e48ca1ef406347472fa611221038097033cb34a88b8bfc052adbbfefa8e92c33b7635e30c7a79d90ff4917c6c0b52aeffffffff034a140000000000001976a914a2bebc3bbc138a248296ad96e6aaf71d83f69c3688ac0000000000000000166a146f6d6e69000000000000008900000000058b114022020000000000001976a914c18bb19ca8f23be298fd305f06f4e039cb10dca088ac00000000"
	accept, err = client.TestMemPoolAccept(brhex)
	log.Println(accept)
	//client.SendRawTransaction(brhex)

	gettransaction, err := client.OmniGettransaction("ff502f029c54dff41e24be1aa56ad049afbb28127f152fa6271a0cddc0e270b2")
	log.Println(err)
	log.Println(gettransaction)

	//result, err := client.DecodeRawTransaction(hex)
	//log.Println(err)
	//log.Println(result)
	//
	//accept, err := client.TestMemPoolAccept(hex)
	//log.Println(accept)

	//hex = "3044022005902dec4afb0d71ad839b9906b1d2e65c4dd7f024a3fb4a2f801db98f3def9d022063f0c668d1342fcb8533e0330f4bc1c5f7e2db61d66cdea91eacb07238668b6601"
	//signature := omnicore.VerifySignature("efc87e0611c998fec725269c1532410afc846f0b0c1ce42792c8e619ad0c1bbb", hex)
	//log.Println(signature)
}

func TestDemo(t *testing.T) {
	name := "Yuki will you marry me ? Tetsu.Yuki will you marry me ? Tetsu."
	s := hex.EncodeToString([]byte(name))
	log.Println(s)
	//bytes, e := hex.DecodeString(s)

	bytes, e := hex.DecodeString("03c57bea53afd7c3c2d75653ca35ca968c8e9610b6448f822cfb006730870ee961")
	log.Println(e)
	log.Println(string(bytes))
}

func TestClient_GetBlockCount(t *testing.T) {
	client := NewClient()
	balance, err := client.GetBalanceByAddress("2N3vGUfBSNALGGxUo8gTYpVQAmLwjXomLhF")
	log.Println(err)
	log.Println(balance)
}

func TestClient_SendRawTransaction(t *testing.T) {
	client := NewClient()
	result, err := client.SendRawTransaction("0200000001788435d51b49b3e9786e9b5b00c76d1684f72ea537d20980fa254d53f00480aa00000000d900473044022056546f616136aa143eb43014ed9e1eccc47ddf70be9c6b28e876a689f983befa022004239aee7b8fa4175e1f7372bfebe3ff1c6689679f3502288cecf0f7fc52e25c014730440220682f20dedef38b05a38b35c8b27903c3fb5b3325dd54f614b6d20a1c0c7ac5a70220268c34a86b8de1dbee3a8dfc584bee4b8ed1591dc62cfaa113d36c69316098920147522103b4df7d3026a437f537dcc0a9e681ffdfb000c9f1223189adf18364588d46e55921036f8a9b88615bb30d9c2dcbf7ef869134f46bf70394c5cb1f440c68ee2f136aaa52aeffffffff033c1900000000000017a914f07c2b51b5774d534ec389937da9232e147b5fb8870000000000000000166a146f6d6e690000000000000079000000000bebc2001c0200000000000017a914f07c2b51b5774d534ec389937da9232e147b5fb88700000000")
	//result, err := client.GetAddressInfo("2MwKVXga7i82DgwmQ9nTPFSuAGP6pTkNQYr")
	log.Println(err)
	log.Println(result)
}

func TestClient_GetBalanceByAddress(t *testing.T) {
}
