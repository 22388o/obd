// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecipientNodeInfo struct {
	RecipientNodePeerId  string   `protobuf:"bytes,1,opt,name=recipient_node_peer_id,json=recipientNodePeerId,proto3" json:"recipient_node_peer_id,omitempty"`
	RecipientUserPeerId  string   `protobuf:"bytes,2,opt,name=recipient_user_peer_id,json=recipientUserPeerId,proto3" json:"recipient_user_peer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecipientNodeInfo) Reset()         { *m = RecipientNodeInfo{} }
func (m *RecipientNodeInfo) String() string { return proto.CompactTextString(m) }
func (*RecipientNodeInfo) ProtoMessage()    {}
func (*RecipientNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *RecipientNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecipientNodeInfo.Unmarshal(m, b)
}
func (m *RecipientNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecipientNodeInfo.Marshal(b, m, deterministic)
}
func (m *RecipientNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecipientNodeInfo.Merge(m, src)
}
func (m *RecipientNodeInfo) XXX_Size() int {
	return xxx_messageInfo_RecipientNodeInfo.Size(m)
}
func (m *RecipientNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RecipientNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RecipientNodeInfo proto.InternalMessageInfo

func (m *RecipientNodeInfo) GetRecipientNodePeerId() string {
	if m != nil {
		return m.RecipientNodePeerId
	}
	return ""
}

func (m *RecipientNodeInfo) GetRecipientUserPeerId() string {
	if m != nil {
		return m.RecipientUserPeerId
	}
	return ""
}

type ConnectPeerRequest struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectPeerRequest) Reset()         { *m = ConnectPeerRequest{} }
func (m *ConnectPeerRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectPeerRequest) ProtoMessage()    {}
func (*ConnectPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *ConnectPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectPeerRequest.Unmarshal(m, b)
}
func (m *ConnectPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectPeerRequest.Marshal(b, m, deterministic)
}
func (m *ConnectPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectPeerRequest.Merge(m, src)
}
func (m *ConnectPeerRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectPeerRequest.Size(m)
}
func (m *ConnectPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectPeerRequest proto.InternalMessageInfo

func (m *ConnectPeerRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type ConnectPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectPeerResponse) Reset()         { *m = ConnectPeerResponse{} }
func (m *ConnectPeerResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectPeerResponse) ProtoMessage()    {}
func (*ConnectPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *ConnectPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectPeerResponse.Unmarshal(m, b)
}
func (m *ConnectPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectPeerResponse.Marshal(b, m, deterministic)
}
func (m *ConnectPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectPeerResponse.Merge(m, src)
}
func (m *ConnectPeerResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectPeerResponse.Size(m)
}
func (m *ConnectPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectPeerResponse proto.InternalMessageInfo

type DisconnectPeerRequest struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectPeerRequest) Reset()         { *m = DisconnectPeerRequest{} }
func (m *DisconnectPeerRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectPeerRequest) ProtoMessage()    {}
func (*DisconnectPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *DisconnectPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectPeerRequest.Unmarshal(m, b)
}
func (m *DisconnectPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectPeerRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectPeerRequest.Merge(m, src)
}
func (m *DisconnectPeerRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectPeerRequest.Size(m)
}
func (m *DisconnectPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectPeerRequest proto.InternalMessageInfo

func (m *DisconnectPeerRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type DisconnectPeerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectPeerResponse) Reset()         { *m = DisconnectPeerResponse{} }
func (m *DisconnectPeerResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectPeerResponse) ProtoMessage()    {}
func (*DisconnectPeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *DisconnectPeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectPeerResponse.Unmarshal(m, b)
}
func (m *DisconnectPeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectPeerResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectPeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectPeerResponse.Merge(m, src)
}
func (m *DisconnectPeerResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectPeerResponse.Size(m)
}
func (m *DisconnectPeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectPeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectPeerResponse proto.InternalMessageInfo

type OpenChannelRequest struct {
	NodePubkeyString     string             `protobuf:"bytes,1,opt,name=node_pubkey_string,json=nodePubkeyString,proto3" json:"node_pubkey_string,omitempty"`
	NodePubkeyIndex      int32              `protobuf:"varint,2,opt,name=node_pubkey_index,json=nodePubkeyIndex,proto3" json:"node_pubkey_index,omitempty"`
	Private              bool               `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
	RecipientInfo        *RecipientNodeInfo `protobuf:"bytes,4,opt,name=recipientInfo,proto3" json:"recipientInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OpenChannelRequest) Reset()         { *m = OpenChannelRequest{} }
func (m *OpenChannelRequest) String() string { return proto.CompactTextString(m) }
func (*OpenChannelRequest) ProtoMessage()    {}
func (*OpenChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{5}
}

func (m *OpenChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelRequest.Unmarshal(m, b)
}
func (m *OpenChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelRequest.Marshal(b, m, deterministic)
}
func (m *OpenChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelRequest.Merge(m, src)
}
func (m *OpenChannelRequest) XXX_Size() int {
	return xxx_messageInfo_OpenChannelRequest.Size(m)
}
func (m *OpenChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelRequest proto.InternalMessageInfo

func (m *OpenChannelRequest) GetNodePubkeyString() string {
	if m != nil {
		return m.NodePubkeyString
	}
	return ""
}

func (m *OpenChannelRequest) GetNodePubkeyIndex() int32 {
	if m != nil {
		return m.NodePubkeyIndex
	}
	return 0
}

func (m *OpenChannelRequest) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *OpenChannelRequest) GetRecipientInfo() *RecipientNodeInfo {
	if m != nil {
		return m.RecipientInfo
	}
	return nil
}

type OpenChannelResponse struct {
	TemplateChannelId    string   `protobuf:"bytes,1,opt,name=template_channel_id,json=templateChannelId,proto3" json:"template_channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenChannelResponse) Reset()         { *m = OpenChannelResponse{} }
func (m *OpenChannelResponse) String() string { return proto.CompactTextString(m) }
func (*OpenChannelResponse) ProtoMessage()    {}
func (*OpenChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{6}
}

func (m *OpenChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenChannelResponse.Unmarshal(m, b)
}
func (m *OpenChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenChannelResponse.Marshal(b, m, deterministic)
}
func (m *OpenChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenChannelResponse.Merge(m, src)
}
func (m *OpenChannelResponse) XXX_Size() int {
	return xxx_messageInfo_OpenChannelResponse.Size(m)
}
func (m *OpenChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenChannelResponse proto.InternalMessageInfo

func (m *OpenChannelResponse) GetTemplateChannelId() string {
	if m != nil {
		return m.TemplateChannelId
	}
	return ""
}

type FundChannelRequest struct {
	TemplateChannelId    string             `protobuf:"bytes,1,opt,name=template_channel_id,json=templateChannelId,proto3" json:"template_channel_id,omitempty"`
	BtcAmount            float64            `protobuf:"fixed64,2,opt,name=btc_amount,json=btcAmount,proto3" json:"btc_amount,omitempty"`
	PropertyId           int64              `protobuf:"varint,3,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	AssetAmount          float64            `protobuf:"fixed64,4,opt,name=asset_amount,json=assetAmount,proto3" json:"asset_amount,omitempty"`
	RecipientInfo        *RecipientNodeInfo `protobuf:"bytes,5,opt,name=recipientInfo,proto3" json:"recipientInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FundChannelRequest) Reset()         { *m = FundChannelRequest{} }
func (m *FundChannelRequest) String() string { return proto.CompactTextString(m) }
func (*FundChannelRequest) ProtoMessage()    {}
func (*FundChannelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{7}
}

func (m *FundChannelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundChannelRequest.Unmarshal(m, b)
}
func (m *FundChannelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundChannelRequest.Marshal(b, m, deterministic)
}
func (m *FundChannelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundChannelRequest.Merge(m, src)
}
func (m *FundChannelRequest) XXX_Size() int {
	return xxx_messageInfo_FundChannelRequest.Size(m)
}
func (m *FundChannelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FundChannelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FundChannelRequest proto.InternalMessageInfo

func (m *FundChannelRequest) GetTemplateChannelId() string {
	if m != nil {
		return m.TemplateChannelId
	}
	return ""
}

func (m *FundChannelRequest) GetBtcAmount() float64 {
	if m != nil {
		return m.BtcAmount
	}
	return 0
}

func (m *FundChannelRequest) GetPropertyId() int64 {
	if m != nil {
		return m.PropertyId
	}
	return 0
}

func (m *FundChannelRequest) GetAssetAmount() float64 {
	if m != nil {
		return m.AssetAmount
	}
	return 0
}

func (m *FundChannelRequest) GetRecipientInfo() *RecipientNodeInfo {
	if m != nil {
		return m.RecipientInfo
	}
	return nil
}

type FundChannelResponse struct {
	ChannelId            string   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FundChannelResponse) Reset()         { *m = FundChannelResponse{} }
func (m *FundChannelResponse) String() string { return proto.CompactTextString(m) }
func (*FundChannelResponse) ProtoMessage()    {}
func (*FundChannelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{8}
}

func (m *FundChannelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundChannelResponse.Unmarshal(m, b)
}
func (m *FundChannelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundChannelResponse.Marshal(b, m, deterministic)
}
func (m *FundChannelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundChannelResponse.Merge(m, src)
}
func (m *FundChannelResponse) XXX_Size() int {
	return xxx_messageInfo_FundChannelResponse.Size(m)
}
func (m *FundChannelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FundChannelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FundChannelResponse proto.InternalMessageInfo

func (m *FundChannelResponse) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

type HelloRequest struct {
	Sayhi                string   `protobuf:"bytes,1,opt,name=sayhi,proto3" json:"sayhi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{9}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetSayhi() string {
	if m != nil {
		return m.Sayhi
	}
	return ""
}

type HelloResponse struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{10}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

type ListChannelsRequest struct {
	ActiveOnly   bool `protobuf:"varint,1,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	InactiveOnly bool `protobuf:"varint,2,opt,name=inactive_only,json=inactiveOnly,proto3" json:"inactive_only,omitempty"`
	PublicOnly   bool `protobuf:"varint,3,opt,name=public_only,json=publicOnly,proto3" json:"public_only,omitempty"`
	PrivateOnly  bool `protobuf:"varint,4,opt,name=private_only,json=privateOnly,proto3" json:"private_only,omitempty"`
	//
	//Filters the response for channels with a target peer's pubkey. If peer is
	//empty, all channels will be returned.
	Peer                 []byte   `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	PageSize             int32    `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageIndex            int32    `protobuf:"varint,7,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListChannelsRequest) Reset()         { *m = ListChannelsRequest{} }
func (m *ListChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*ListChannelsRequest) ProtoMessage()    {}
func (*ListChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{11}
}

func (m *ListChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChannelsRequest.Unmarshal(m, b)
}
func (m *ListChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChannelsRequest.Marshal(b, m, deterministic)
}
func (m *ListChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChannelsRequest.Merge(m, src)
}
func (m *ListChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_ListChannelsRequest.Size(m)
}
func (m *ListChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListChannelsRequest proto.InternalMessageInfo

func (m *ListChannelsRequest) GetActiveOnly() bool {
	if m != nil {
		return m.ActiveOnly
	}
	return false
}

func (m *ListChannelsRequest) GetInactiveOnly() bool {
	if m != nil {
		return m.InactiveOnly
	}
	return false
}

func (m *ListChannelsRequest) GetPublicOnly() bool {
	if m != nil {
		return m.PublicOnly
	}
	return false
}

func (m *ListChannelsRequest) GetPrivateOnly() bool {
	if m != nil {
		return m.PrivateOnly
	}
	return false
}

func (m *ListChannelsRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *ListChannelsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListChannelsRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

type Channel struct {
	// Whether this channel is active or not
	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	// The identity pubkey of the remote node
	RemotePubkey string `protobuf:"bytes,2,opt,name=remote_pubkey,json=remotePubkey,proto3" json:"remote_pubkey,omitempty"`
	//
	//The outpoint (txid:index) of the funding transaction. With this value, Bob
	//will be able to generate a signature for Alice's version of the commitment
	//transaction.
	ChannelPoint string `protobuf:"bytes,3,opt,name=channel_point,json=channelPoint,proto3" json:"channel_point,omitempty"`
	ChanId       string `protobuf:"bytes,4,opt,name=chan_id,json=chanId,proto3" json:"chan_id,omitempty"`
	// The total amount of funds held in this channel
	Capacity int64 `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	// This node's current balance in this channel
	LocalBalance int64 `protobuf:"varint,6,opt,name=local_balance,json=localBalance,proto3" json:"local_balance,omitempty"`
	// The counterparty's current balance in this channel
	RemoteBalance int64 `protobuf:"varint,7,opt,name=remote_balance,json=remoteBalance,proto3" json:"remote_balance,omitempty"`
	//
	//The amount calculated to be paid in fees for the current set of commitment
	//transactions. The fee amount is persisted with the channel in order to
	//allow the fee amount to be removed and recalculated with each channel state
	//update, including updates that happen after a system restart.
	CommitFee int64 `protobuf:"varint,8,opt,name=commit_fee,json=commitFee,proto3" json:"commit_fee,omitempty"`
	// The weight of the commitment transaction
	CommitWeight int64 `protobuf:"varint,9,opt,name=commit_weight,json=commitWeight,proto3" json:"commit_weight,omitempty"`
	//
	//The required number of satoshis per kilo-weight that the requester will pay
	//at all times, for both the funding transaction and commitment transaction.
	//This value can later be updated once the channel is open.
	FeePerKw int64 `protobuf:"varint,10,opt,name=fee_per_kw,json=feePerKw,proto3" json:"fee_per_kw,omitempty"`
	// The unsettled balance in this channel
	UnsettledBalance int64 `protobuf:"varint,11,opt,name=unsettled_balance,json=unsettledBalance,proto3" json:"unsettled_balance,omitempty"`
	//
	//The total number of satoshis we've sent within this channel.
	TotalSatoshisSent int64 `protobuf:"varint,12,opt,name=total_satoshis_sent,json=totalSatoshisSent,proto3" json:"total_satoshis_sent,omitempty"`
	//
	//The total number of satoshis we've received within this channel.
	TotalSatoshisReceived int64 `protobuf:"varint,13,opt,name=total_satoshis_received,json=totalSatoshisReceived,proto3" json:"total_satoshis_received,omitempty"`
	//
	//The total number of updates conducted within this channel.
	NumUpdates uint64 `protobuf:"varint,14,opt,name=num_updates,json=numUpdates,proto3" json:"num_updates,omitempty"`
	// Whether this channel is advertised to the network or not.
	Private bool `protobuf:"varint,17,opt,name=private,proto3" json:"private,omitempty"`
	// True if we were the ones that created the channel.
	Initiator bool `protobuf:"varint,18,opt,name=initiator,proto3" json:"initiator,omitempty"`
	// A set of flags showing the current state of the channel.
	ChanStatusFlags string `protobuf:"bytes,19,opt,name=chan_status_flags,json=chanStatusFlags,proto3" json:"chan_status_flags,omitempty"`
	//
	//The number of seconds that the channel has been monitored by the channel
	//scoring system. Scores are currently not persisted, so this value may be
	//less than the lifetime of the channel [EXPERIMENTAL].
	Lifetime int64 `protobuf:"varint,23,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	//
	//The number of seconds that the remote peer has been observed as being online
	//by the channel scoring system over the lifetime of the channel
	//[EXPERIMENTAL].
	Uptime int64 `protobuf:"varint,24,opt,name=uptime,proto3" json:"uptime,omitempty"`
	//
	//Close address is the address that we will enforce payout to on cooperative
	//close if the channel was opened utilizing option upfront shutdown. This
	//value can be set on channel open by setting close_address in an open channel
	//request. If this value is not set, you can still choose a payout address by
	//cooperatively closing with the delivery_address field set.
	CloseAddress string `protobuf:"bytes,25,opt,name=close_address,json=closeAddress,proto3" json:"close_address,omitempty"`
	//
	//The amount that the initiator of the channel optionally pushed to the remote
	//party on channel open. This amount will be zero if the channel initiator did
	//not push any funds to the remote peer. If the initiator field is true, we
	//pushed this amount to our peer, if it is false, the remote peer pushed this
	//amount to us.
	PushAmountSat        uint64   `protobuf:"varint,27,opt,name=push_amount_sat,json=pushAmountSat,proto3" json:"push_amount_sat,omitempty"`
	PropertyId           int64    `protobuf:"varint,28,opt,name=property_id,json=propertyId,proto3" json:"property_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{12}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Channel) GetRemotePubkey() string {
	if m != nil {
		return m.RemotePubkey
	}
	return ""
}

func (m *Channel) GetChannelPoint() string {
	if m != nil {
		return m.ChannelPoint
	}
	return ""
}

func (m *Channel) GetChanId() string {
	if m != nil {
		return m.ChanId
	}
	return ""
}

func (m *Channel) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Channel) GetLocalBalance() int64 {
	if m != nil {
		return m.LocalBalance
	}
	return 0
}

func (m *Channel) GetRemoteBalance() int64 {
	if m != nil {
		return m.RemoteBalance
	}
	return 0
}

func (m *Channel) GetCommitFee() int64 {
	if m != nil {
		return m.CommitFee
	}
	return 0
}

func (m *Channel) GetCommitWeight() int64 {
	if m != nil {
		return m.CommitWeight
	}
	return 0
}

func (m *Channel) GetFeePerKw() int64 {
	if m != nil {
		return m.FeePerKw
	}
	return 0
}

func (m *Channel) GetUnsettledBalance() int64 {
	if m != nil {
		return m.UnsettledBalance
	}
	return 0
}

func (m *Channel) GetTotalSatoshisSent() int64 {
	if m != nil {
		return m.TotalSatoshisSent
	}
	return 0
}

func (m *Channel) GetTotalSatoshisReceived() int64 {
	if m != nil {
		return m.TotalSatoshisReceived
	}
	return 0
}

func (m *Channel) GetNumUpdates() uint64 {
	if m != nil {
		return m.NumUpdates
	}
	return 0
}

func (m *Channel) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *Channel) GetInitiator() bool {
	if m != nil {
		return m.Initiator
	}
	return false
}

func (m *Channel) GetChanStatusFlags() string {
	if m != nil {
		return m.ChanStatusFlags
	}
	return ""
}

func (m *Channel) GetLifetime() int64 {
	if m != nil {
		return m.Lifetime
	}
	return 0
}

func (m *Channel) GetUptime() int64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Channel) GetCloseAddress() string {
	if m != nil {
		return m.CloseAddress
	}
	return ""
}

func (m *Channel) GetPushAmountSat() uint64 {
	if m != nil {
		return m.PushAmountSat
	}
	return 0
}

func (m *Channel) GetPropertyId() int64 {
	if m != nil {
		return m.PropertyId
	}
	return 0
}

type PendingChannelsRequest struct {
	PageSize             int32    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageIndex            int32    `protobuf:"varint,2,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingChannelsRequest) Reset()         { *m = PendingChannelsRequest{} }
func (m *PendingChannelsRequest) String() string { return proto.CompactTextString(m) }
func (*PendingChannelsRequest) ProtoMessage()    {}
func (*PendingChannelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{13}
}

func (m *PendingChannelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingChannelsRequest.Unmarshal(m, b)
}
func (m *PendingChannelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingChannelsRequest.Marshal(b, m, deterministic)
}
func (m *PendingChannelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingChannelsRequest.Merge(m, src)
}
func (m *PendingChannelsRequest) XXX_Size() int {
	return xxx_messageInfo_PendingChannelsRequest.Size(m)
}
func (m *PendingChannelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingChannelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PendingChannelsRequest proto.InternalMessageInfo

func (m *PendingChannelsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PendingChannelsRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

type ListChannelsResponse struct {
	// The list of active channels
	Channels             []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListChannelsResponse) Reset()         { *m = ListChannelsResponse{} }
func (m *ListChannelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListChannelsResponse) ProtoMessage()    {}
func (*ListChannelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{14}
}

func (m *ListChannelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListChannelsResponse.Unmarshal(m, b)
}
func (m *ListChannelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListChannelsResponse.Marshal(b, m, deterministic)
}
func (m *ListChannelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListChannelsResponse.Merge(m, src)
}
func (m *ListChannelsResponse) XXX_Size() int {
	return xxx_messageInfo_ListChannelsResponse.Size(m)
}
func (m *ListChannelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListChannelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListChannelsResponse proto.InternalMessageInfo

func (m *ListChannelsResponse) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

type LatestTransactionRequest struct {
	ChannelId            string   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LatestTransactionRequest) Reset()         { *m = LatestTransactionRequest{} }
func (m *LatestTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*LatestTransactionRequest) ProtoMessage()    {}
func (*LatestTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{15}
}

func (m *LatestTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LatestTransactionRequest.Unmarshal(m, b)
}
func (m *LatestTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LatestTransactionRequest.Marshal(b, m, deterministic)
}
func (m *LatestTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LatestTransactionRequest.Merge(m, src)
}
func (m *LatestTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_LatestTransactionRequest.Size(m)
}
func (m *LatestTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LatestTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LatestTransactionRequest proto.InternalMessageInfo

func (m *LatestTransactionRequest) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

type Transaction struct {
	ChannelId            string   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	AmountA              float64  `protobuf:"fixed64,2,opt,name=amount_a,json=amountA,proto3" json:"amount_a,omitempty"`
	AmountB              float64  `protobuf:"fixed64,3,opt,name=amount_b,json=amountB,proto3" json:"amount_b,omitempty"`
	PeerA                string   `protobuf:"bytes,4,opt,name=peer_a,json=peerA,proto3" json:"peer_a,omitempty"`
	PeerB                string   `protobuf:"bytes,5,opt,name=peer_b,json=peerB,proto3" json:"peer_b,omitempty"`
	CurrState            int32    `protobuf:"varint,6,opt,name=curr_state,json=currState,proto3" json:"curr_state,omitempty"`
	TxHash               string   `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	TxType               int32    `protobuf:"varint,8,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	H                    string   `protobuf:"bytes,9,opt,name=h,proto3" json:"h,omitempty"`
	R                    string   `protobuf:"bytes,10,opt,name=r,proto3" json:"r,omitempty"`
	AmountHtlc           float64  `protobuf:"fixed64,11,opt,name=amount_htlc,json=amountHtlc,proto3" json:"amount_htlc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{16}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *Transaction) GetAmountA() float64 {
	if m != nil {
		return m.AmountA
	}
	return 0
}

func (m *Transaction) GetAmountB() float64 {
	if m != nil {
		return m.AmountB
	}
	return 0
}

func (m *Transaction) GetPeerA() string {
	if m != nil {
		return m.PeerA
	}
	return ""
}

func (m *Transaction) GetPeerB() string {
	if m != nil {
		return m.PeerB
	}
	return ""
}

func (m *Transaction) GetCurrState() int32 {
	if m != nil {
		return m.CurrState
	}
	return 0
}

func (m *Transaction) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *Transaction) GetTxType() int32 {
	if m != nil {
		return m.TxType
	}
	return 0
}

func (m *Transaction) GetH() string {
	if m != nil {
		return m.H
	}
	return ""
}

func (m *Transaction) GetR() string {
	if m != nil {
		return m.R
	}
	return ""
}

func (m *Transaction) GetAmountHtlc() float64 {
	if m != nil {
		return m.AmountHtlc
	}
	return 0
}

type GetTransactionsRequest struct {
	ChannelId            string   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageIndex            int32    `protobuf:"varint,3,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{17}
}

func (m *GetTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionsRequest.Unmarshal(m, b)
}
func (m *GetTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionsRequest.Merge(m, src)
}
func (m *GetTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionsRequest.Size(m)
}
func (m *GetTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionsRequest proto.InternalMessageInfo

func (m *GetTransactionsRequest) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *GetTransactionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetTransactionsRequest) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

type TransactionDetails struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount           int32          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	PageSize             int32          `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageIndex            int32          `protobuf:"varint,4,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionDetails) Reset()         { *m = TransactionDetails{} }
func (m *TransactionDetails) String() string { return proto.CompactTextString(m) }
func (*TransactionDetails) ProtoMessage()    {}
func (*TransactionDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{18}
}

func (m *TransactionDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionDetails.Unmarshal(m, b)
}
func (m *TransactionDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionDetails.Marshal(b, m, deterministic)
}
func (m *TransactionDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionDetails.Merge(m, src)
}
func (m *TransactionDetails) XXX_Size() int {
	return xxx_messageInfo_TransactionDetails.Size(m)
}
func (m *TransactionDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionDetails.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionDetails proto.InternalMessageInfo

func (m *TransactionDetails) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *TransactionDetails) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *TransactionDetails) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *TransactionDetails) GetPageIndex() int32 {
	if m != nil {
		return m.PageIndex
	}
	return 0
}

type ChannelBalanceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelBalanceRequest) Reset()         { *m = ChannelBalanceRequest{} }
func (m *ChannelBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*ChannelBalanceRequest) ProtoMessage()    {}
func (*ChannelBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{19}
}

func (m *ChannelBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBalanceRequest.Unmarshal(m, b)
}
func (m *ChannelBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBalanceRequest.Marshal(b, m, deterministic)
}
func (m *ChannelBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBalanceRequest.Merge(m, src)
}
func (m *ChannelBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_ChannelBalanceRequest.Size(m)
}
func (m *ChannelBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBalanceRequest proto.InternalMessageInfo

type ChannelBalanceResponse struct {
	LocalBalance             float64  `protobuf:"fixed64,1,opt,name=local_balance,json=localBalance,proto3" json:"local_balance,omitempty"`
	RemoteBalance            float64  `protobuf:"fixed64,2,opt,name=remote_balance,json=remoteBalance,proto3" json:"remote_balance,omitempty"`
	UnsettledLocalBalance    float64  `protobuf:"fixed64,3,opt,name=unsettled_local_balance,json=unsettledLocalBalance,proto3" json:"unsettled_local_balance,omitempty"`
	UnsettledRemoteBalance   float64  `protobuf:"fixed64,4,opt,name=unsettled_remote_balance,json=unsettledRemoteBalance,proto3" json:"unsettled_remote_balance,omitempty"`
	PendingOpenLocalBalance  float64  `protobuf:"fixed64,5,opt,name=pending_open_local_balance,json=pendingOpenLocalBalance,proto3" json:"pending_open_local_balance,omitempty"`
	PendingOpenRemoteBalance float64  `protobuf:"fixed64,6,opt,name=pending_open_remote_balance,json=pendingOpenRemoteBalance,proto3" json:"pending_open_remote_balance,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ChannelBalanceResponse) Reset()         { *m = ChannelBalanceResponse{} }
func (m *ChannelBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*ChannelBalanceResponse) ProtoMessage()    {}
func (*ChannelBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{20}
}

func (m *ChannelBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelBalanceResponse.Unmarshal(m, b)
}
func (m *ChannelBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelBalanceResponse.Marshal(b, m, deterministic)
}
func (m *ChannelBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelBalanceResponse.Merge(m, src)
}
func (m *ChannelBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_ChannelBalanceResponse.Size(m)
}
func (m *ChannelBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelBalanceResponse proto.InternalMessageInfo

func (m *ChannelBalanceResponse) GetLocalBalance() float64 {
	if m != nil {
		return m.LocalBalance
	}
	return 0
}

func (m *ChannelBalanceResponse) GetRemoteBalance() float64 {
	if m != nil {
		return m.RemoteBalance
	}
	return 0
}

func (m *ChannelBalanceResponse) GetUnsettledLocalBalance() float64 {
	if m != nil {
		return m.UnsettledLocalBalance
	}
	return 0
}

func (m *ChannelBalanceResponse) GetUnsettledRemoteBalance() float64 {
	if m != nil {
		return m.UnsettledRemoteBalance
	}
	return 0
}

func (m *ChannelBalanceResponse) GetPendingOpenLocalBalance() float64 {
	if m != nil {
		return m.PendingOpenLocalBalance
	}
	return 0
}

func (m *ChannelBalanceResponse) GetPendingOpenRemoteBalance() float64 {
	if m != nil {
		return m.PendingOpenRemoteBalance
	}
	return 0
}

func init() {
	proto.RegisterType((*RecipientNodeInfo)(nil), "proxy.RecipientNodeInfo")
	proto.RegisterType((*ConnectPeerRequest)(nil), "proxy.ConnectPeerRequest")
	proto.RegisterType((*ConnectPeerResponse)(nil), "proxy.ConnectPeerResponse")
	proto.RegisterType((*DisconnectPeerRequest)(nil), "proxy.DisconnectPeerRequest")
	proto.RegisterType((*DisconnectPeerResponse)(nil), "proxy.DisconnectPeerResponse")
	proto.RegisterType((*OpenChannelRequest)(nil), "proxy.OpenChannelRequest")
	proto.RegisterType((*OpenChannelResponse)(nil), "proxy.OpenChannelResponse")
	proto.RegisterType((*FundChannelRequest)(nil), "proxy.FundChannelRequest")
	proto.RegisterType((*FundChannelResponse)(nil), "proxy.FundChannelResponse")
	proto.RegisterType((*HelloRequest)(nil), "proxy.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "proxy.HelloResponse")
	proto.RegisterType((*ListChannelsRequest)(nil), "proxy.ListChannelsRequest")
	proto.RegisterType((*Channel)(nil), "proxy.Channel")
	proto.RegisterType((*PendingChannelsRequest)(nil), "proxy.PendingChannelsRequest")
	proto.RegisterType((*ListChannelsResponse)(nil), "proxy.ListChannelsResponse")
	proto.RegisterType((*LatestTransactionRequest)(nil), "proxy.LatestTransactionRequest")
	proto.RegisterType((*Transaction)(nil), "proxy.Transaction")
	proto.RegisterType((*GetTransactionsRequest)(nil), "proxy.GetTransactionsRequest")
	proto.RegisterType((*TransactionDetails)(nil), "proxy.TransactionDetails")
	proto.RegisterType((*ChannelBalanceRequest)(nil), "proxy.ChannelBalanceRequest")
	proto.RegisterType((*ChannelBalanceResponse)(nil), "proxy.ChannelBalanceResponse")
}

func init() {
	proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1)
}

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 1444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0xcf, 0x6e, 0xdb, 0x46,
	0x13, 0x07, 0x6d, 0x49, 0xb6, 0x46, 0xb2, 0x1d, 0xaf, 0x62, 0x9b, 0x96, 0x1d, 0xc4, 0x51, 0xbe,
	0xaf, 0x30, 0x92, 0xc2, 0x07, 0xa7, 0x08, 0x5a, 0x14, 0x2d, 0x60, 0xc7, 0x4d, 0x6c, 0xc4, 0x69,
	0x0c, 0x3a, 0x41, 0x81, 0x5e, 0x08, 0x8a, 0x1c, 0x5b, 0x44, 0xa8, 0x25, 0xcb, 0x5d, 0x26, 0x56,
	0x80, 0xbe, 0x40, 0x1f, 0xa2, 0xf7, 0xbe, 0x49, 0xcf, 0x7d, 0x80, 0x5e, 0x7b, 0xec, 0x2b, 0x14,
	0x3b, 0xbb, 0xa4, 0x49, 0x4a, 0x71, 0x92, 0x9b, 0xf6, 0x37, 0x7f, 0x76, 0x66, 0x76, 0xe6, 0xc7,
	0x11, 0xb4, 0xd3, 0xc4, 0xdf, 0x4b, 0xd2, 0x58, 0xc6, 0xac, 0x99, 0xa4, 0xf1, 0xd5, 0x64, 0xf0,
	0x2b, 0xac, 0x3a, 0xe8, 0x87, 0x49, 0x88, 0x5c, 0xfe, 0x18, 0x07, 0x78, 0xc2, 0x2f, 0x62, 0xf6,
	0x08, 0xd6, 0xd3, 0x1c, 0x74, 0x79, 0x1c, 0xa0, 0x9b, 0x20, 0xa6, 0x6e, 0x18, 0xd8, 0xd6, 0x8e,
	0xb5, 0xdb, 0x76, 0x7a, 0x69, 0xd9, 0xe4, 0x0c, 0x31, 0x3d, 0x09, 0xaa, 0x46, 0x99, 0xc0, 0xb4,
	0x30, 0x9a, 0xab, 0x19, 0xbd, 0x16, 0x98, 0x6a, 0xa3, 0xc1, 0x2e, 0xb0, 0x27, 0x31, 0xe7, 0xe8,
	0x4b, 0x05, 0x38, 0xf8, 0x4b, 0x86, 0x42, 0x32, 0x06, 0x0d, 0x2f, 0x08, 0x52, 0x73, 0x1b, 0xfd,
	0x1e, 0xac, 0x41, 0xaf, 0xa2, 0x29, 0x92, 0x98, 0x0b, 0x1c, 0x3c, 0x84, 0xb5, 0xa3, 0x50, 0xf8,
	0x9f, 0xe6, 0xc3, 0x86, 0xf5, 0xba, 0xb2, 0x71, 0xf3, 0xa7, 0x05, 0xec, 0x65, 0x82, 0xfc, 0xc9,
	0xc8, 0xe3, 0x1c, 0xa3, 0xdc, 0xc9, 0x97, 0xc0, 0x74, 0xfa, 0xd9, 0xf0, 0x0d, 0x4e, 0x5c, 0x21,
	0xd3, 0x90, 0x5f, 0x1a, 0x97, 0xb7, 0x94, 0xe4, 0x8c, 0x04, 0xe7, 0x84, 0xb3, 0x07, 0xb0, 0x5a,
	0xd6, 0x0e, 0x79, 0x80, 0x57, 0x94, 0x7c, 0xd3, 0x59, 0xb9, 0x56, 0x3e, 0x51, 0x30, 0xb3, 0x61,
	0x21, 0x49, 0xc3, 0xb7, 0x9e, 0x44, 0x7b, 0x7e, 0xc7, 0xda, 0x5d, 0x74, 0xf2, 0x23, 0xfb, 0x1e,
	0x96, 0x8a, 0x4a, 0xa9, 0xd7, 0xb0, 0x1b, 0x3b, 0xd6, 0x6e, 0x67, 0xdf, 0xde, 0xa3, 0x07, 0xdb,
	0x9b, 0x7a, 0x2d, 0xa7, 0xaa, 0x3e, 0xf8, 0x01, 0x7a, 0x95, 0x4c, 0x74, 0x86, 0x6c, 0x0f, 0x7a,
	0x12, 0xc7, 0x49, 0xe4, 0x49, 0x74, 0x7d, 0x2d, 0xbb, 0x7e, 0xd0, 0xd5, 0x5c, 0x64, 0xac, 0x4e,
	0x82, 0xc1, 0x3f, 0x16, 0xb0, 0xa7, 0x19, 0x0f, 0x6a, 0x15, 0xf9, 0x4c, 0x37, 0xec, 0x0e, 0xc0,
	0x50, 0xfa, 0xae, 0x37, 0x8e, 0x33, 0x2e, 0xa9, 0x18, 0x96, 0xd3, 0x1e, 0x4a, 0xff, 0x80, 0x00,
	0x76, 0x17, 0x3a, 0x49, 0x1a, 0x27, 0x98, 0xca, 0x89, 0x72, 0xa3, 0x4a, 0x31, 0xef, 0x40, 0x0e,
	0x9d, 0x04, 0xec, 0x1e, 0x74, 0x3d, 0x21, 0x50, 0xe6, 0x1e, 0x1a, 0xe4, 0xa1, 0x43, 0x98, 0xf1,
	0x31, 0x55, 0xb0, 0xe6, 0xe7, 0x15, 0xec, 0x2b, 0xe8, 0x55, 0x12, 0x35, 0x05, 0xbb, 0x03, 0x30,
	0x95, 0x60, 0xdb, 0x2f, 0xea, 0xf3, 0x3f, 0xe8, 0x1e, 0x63, 0x14, 0xc5, 0x79, 0x61, 0x6e, 0x43,
	0x53, 0x78, 0x93, 0x51, 0x68, 0x34, 0xf5, 0x61, 0x70, 0x1f, 0x96, 0x8c, 0x96, 0xf1, 0xca, 0xa0,
	0x91, 0xa2, 0x48, 0xf2, 0xb6, 0x54, 0xbf, 0x07, 0xff, 0x5a, 0xd0, 0x3b, 0x0d, 0x85, 0x34, 0x11,
	0x88, 0xdc, 0xe5, 0x5d, 0xe8, 0x78, 0xbe, 0x0c, 0xdf, 0xa2, 0x1b, 0xf3, 0x68, 0x42, 0x26, 0x8b,
	0x0e, 0x68, 0xe8, 0x25, 0x8f, 0x26, 0xec, 0x3e, 0x2c, 0x85, 0xbc, 0xac, 0x32, 0x47, 0x2a, 0xdd,
	0x1c, 0x24, 0x25, 0x55, 0xe2, 0x6c, 0x18, 0x85, 0xbe, 0x56, 0xd1, 0xdd, 0x06, 0x1a, 0x22, 0x85,
	0x7b, 0xd0, 0x35, 0xbd, 0xa7, 0x35, 0x1a, 0xa4, 0xd1, 0x31, 0x18, 0xa9, 0x30, 0x68, 0xa8, 0x61,
	0xa6, 0xca, 0x76, 0x1d, 0xfa, 0xcd, 0xb6, 0xa0, 0x9d, 0x78, 0x97, 0xe8, 0x8a, 0xf0, 0x3d, 0xda,
	0x2d, 0xea, 0xf2, 0x45, 0x05, 0x9c, 0x87, 0xef, 0xa9, 0x78, 0x24, 0xd4, 0x33, 0xb0, 0x40, 0x52,
	0x52, 0xa7, 0xee, 0x1f, 0xfc, 0xd6, 0x82, 0x05, 0x93, 0x2d, 0x5b, 0x87, 0x96, 0x8e, 0xd6, 0x24,
	0x68, 0x4e, 0x2a, 0xb9, 0x14, 0xc7, 0xb1, 0xcc, 0xe7, 0xc9, 0xd0, 0x48, 0x57, 0x83, 0x7a, 0x96,
	0x94, 0x52, 0xfe, 0x48, 0x49, 0x1c, 0x72, 0x49, 0xe9, 0xb5, 0x9d, 0xae, 0x01, 0xcf, 0x14, 0xc6,
	0x36, 0x60, 0x41, 0x9d, 0xd5, 0x33, 0x36, 0x48, 0xdc, 0x52, 0xc7, 0x93, 0x80, 0xf5, 0x61, 0xd1,
	0xf7, 0x12, 0xcf, 0x0f, 0xe5, 0x84, 0x52, 0x9b, 0x77, 0x8a, 0xb3, 0xf2, 0x1c, 0xc5, 0xbe, 0x17,
	0xb9, 0x43, 0x2f, 0xf2, 0xb8, 0xaf, 0x53, 0x9c, 0x77, 0xba, 0x04, 0x1e, 0x6a, 0x8c, 0xfd, 0x1f,
	0x96, 0x4d, 0x8c, 0xb9, 0xd6, 0x02, 0x69, 0x99, 0xc8, 0x73, 0x35, 0xd5, 0x4a, 0xf1, 0x78, 0x1c,
	0x4a, 0xf7, 0x02, 0xd1, 0x5e, 0x24, 0x95, 0xb6, 0x46, 0x9e, 0x22, 0x65, 0x6a, 0xc4, 0xef, 0x30,
	0xbc, 0x1c, 0x49, 0xbb, 0xad, 0xaf, 0xd2, 0xe0, 0x4f, 0x84, 0xb1, 0x6d, 0x80, 0x0b, 0x54, 0x44,
	0x9c, 0xba, 0x6f, 0xde, 0xd9, 0xa0, 0xa3, 0xbd, 0x40, 0x3c, 0xc3, 0xf4, 0xf9, 0x3b, 0xf6, 0x10,
	0x56, 0x33, 0x2e, 0x50, 0xca, 0x08, 0x83, 0x22, 0x96, 0x0e, 0x29, 0xdd, 0x2a, 0x04, 0x79, 0x38,
	0x6a, 0x86, 0x63, 0xe9, 0x45, 0xae, 0xf0, 0x64, 0x2c, 0x46, 0xa1, 0x70, 0x05, 0x72, 0x69, 0x77,
	0x49, 0x7d, 0x95, 0x44, 0xe7, 0x46, 0x72, 0x8e, 0x5c, 0xb2, 0xc7, 0xb0, 0x51, 0xd3, 0x4f, 0xd1,
	0xc7, 0xf0, 0x2d, 0x06, 0xf6, 0x12, 0xd9, 0xac, 0x55, 0x6c, 0x1c, 0x23, 0x54, 0x9d, 0xc7, 0xb3,
	0xb1, 0x9b, 0x25, 0x81, 0x27, 0x51, 0xd8, 0xcb, 0x3b, 0xd6, 0x6e, 0xc3, 0x01, 0x9e, 0x8d, 0x5f,
	0x6b, 0xa4, 0x4c, 0x82, 0xab, 0x55, 0x12, 0xdc, 0x86, 0x76, 0xc8, 0x43, 0x19, 0x7a, 0x32, 0x4e,
	0x6d, 0x46, 0xb2, 0x6b, 0x40, 0x11, 0x2d, 0x3d, 0xa8, 0x90, 0x9e, 0xcc, 0x84, 0x7b, 0x11, 0x79,
	0x97, 0xc2, 0xee, 0xd1, 0xd3, 0xae, 0x28, 0xc1, 0x39, 0xe1, 0x4f, 0x15, 0xac, 0xde, 0x38, 0x0a,
	0x2f, 0x50, 0x86, 0x63, 0xb4, 0x37, 0x74, 0xd5, 0xf2, 0xb3, 0x6a, 0xbd, 0x2c, 0x21, 0x89, 0x4d,
	0x12, 0x73, 0xa2, 0x07, 0x89, 0x62, 0x81, 0xae, 0xfa, 0x6a, 0xa0, 0x10, 0xf6, 0xa6, 0xe9, 0x2a,
	0x05, 0x1e, 0x68, 0x8c, 0x7d, 0x01, 0x2b, 0x49, 0x26, 0x46, 0x86, 0x98, 0x54, 0x6d, 0xec, 0x2d,
	0xca, 0x70, 0x49, 0xc1, 0x9a, 0x9b, 0xce, 0xbd, 0x29, 0x8a, 0xdb, 0xae, 0x53, 0xdc, 0xe0, 0x15,
	0xac, 0x9f, 0x21, 0x0f, 0x42, 0x7e, 0x59, 0x27, 0x80, 0xca, 0x88, 0x59, 0x37, 0x8e, 0xd8, 0x5c,
	0x7d, 0xc4, 0x0e, 0xe1, 0x76, 0x95, 0x53, 0x0c, 0x01, 0x3d, 0x80, 0x45, 0x33, 0x1c, 0xc2, 0xb6,
	0x76, 0xe6, 0x77, 0x3b, 0xfb, 0xcb, 0x86, 0x28, 0x73, 0x02, 0x2c, 0xe4, 0x83, 0x6f, 0xc0, 0x3e,
	0x55, 0x0f, 0x25, 0x5f, 0xa5, 0x1e, 0x17, 0x6a, 0x2e, 0x63, 0x9e, 0xc7, 0xf6, 0x11, 0x7a, 0xfc,
	0x7d, 0x0e, 0x3a, 0x25, 0xab, 0x8f, 0xa8, 0xb3, 0x4d, 0x58, 0x34, 0x75, 0xf4, 0xcc, 0x47, 0x62,
	0x41, 0x9f, 0x0f, 0x4a, 0xa2, 0x21, 0x4d, 0x77, 0x21, 0x3a, 0x64, 0x6b, 0xd0, 0xa2, 0x1d, 0xc3,
	0x33, 0x73, 0xdd, 0x54, 0xa7, 0x83, 0x02, 0x1e, 0xd2, 0x50, 0x1b, 0xf8, 0x90, 0x42, 0xc8, 0xd2,
	0x94, 0xba, 0x26, 0x67, 0xac, 0xb6, 0x42, 0x54, 0xbb, 0xa0, 0x62, 0x09, 0x79, 0xe5, 0x8e, 0x3c,
	0x31, 0xa2, 0x21, 0x6e, 0x3b, 0x2d, 0x79, 0x75, 0xec, 0x89, 0x91, 0x11, 0xc8, 0x49, 0xa2, 0x47,
	0xb7, 0xa9, 0x04, 0xaf, 0x26, 0x09, 0xb2, 0x2e, 0x58, 0x23, 0x9a, 0xd5, 0xb6, 0x63, 0x8d, 0xd4,
	0x29, 0xa5, 0xb9, 0x6c, 0x3b, 0x56, 0x4a, 0xdc, 0xad, 0xa3, 0x1e, 0xc9, 0xc8, 0xa7, 0x51, 0xb4,
	0x1c, 0xd0, 0xd0, 0xb1, 0x8c, 0xfc, 0x81, 0x80, 0xf5, 0x67, 0x58, 0x2e, 0xac, 0xf8, 0xb4, 0xca,
	0x56, 0x9b, 0x62, 0xee, 0xc6, 0xa6, 0x98, 0xaf, 0x37, 0xc5, 0x1f, 0x16, 0xb0, 0xd2, 0x95, 0x47,
	0x28, 0xbd, 0x30, 0x12, 0xec, 0x31, 0x74, 0x65, 0x29, 0x10, 0xd3, 0x17, 0xcc, 0xf4, 0x45, 0xf9,
	0xf1, 0x2b, 0x7a, 0x2a, 0x49, 0x4d, 0x0c, 0x7e, 0xf1, 0x75, 0x6f, 0x3a, 0x40, 0xd0, 0x13, 0xfa,
	0x34, 0x57, 0x62, 0x9d, 0xbf, 0x31, 0xd6, 0x46, 0x3d, 0xd6, 0x0d, 0x58, 0x33, 0x1d, 0x69, 0x78,
	0xcb, 0xd4, 0x67, 0xf0, 0xd7, 0x1c, 0xac, 0xd7, 0x25, 0xa6, 0xb9, 0xa7, 0x48, 0xdb, 0xa2, 0xba,
	0x7f, 0x8c, 0xb4, 0x75, 0xc7, 0xd5, 0x48, 0xfb, 0x31, 0x6c, 0x5c, 0x53, 0x6a, 0xd5, 0xab, 0x6e,
	0xc3, 0xb5, 0x42, 0x7c, 0x5a, 0x76, 0xff, 0x35, 0xd8, 0xd7, 0x76, 0xb5, 0x8b, 0xf4, 0xf6, 0xb2,
	0x5e, 0xc8, 0x9d, 0xca, 0x8d, 0xdf, 0x42, 0x3f, 0xd1, 0x44, 0xe0, 0xc6, 0x09, 0xf2, 0xda, 0xa5,
	0x4d, 0xb2, 0xdd, 0x30, 0x1a, 0x6a, 0xc5, 0xab, 0x5c, 0xfb, 0x1d, 0x6c, 0x55, 0x8c, 0x6b, 0x37,
	0xb7, 0xc8, 0xda, 0x2e, 0x59, 0x57, 0xee, 0xde, 0xff, 0xbb, 0x09, 0xed, 0x53, 0xf5, 0xa1, 0xe1,
	0x6a, 0x93, 0xdd, 0x87, 0x26, 0xad, 0x2d, 0xac, 0x67, 0x7a, 0xa0, 0xbc, 0xea, 0xf4, 0x6f, 0x57,
	0x41, 0x53, 0xfb, 0x23, 0xe8, 0x94, 0x16, 0x74, 0xb6, 0x99, 0xb3, 0xca, 0xd4, 0x6a, 0xde, 0xef,
	0xcf, 0x12, 0x19, 0x2f, 0x2f, 0x60, 0xb9, 0xba, 0xa2, 0xb3, 0x6d, 0xa3, 0x3d, 0x73, 0xcd, 0xef,
	0xdf, 0xf9, 0x80, 0xf4, 0x3a, 0xa8, 0xd2, 0x32, 0x5c, 0x04, 0x35, 0xbd, 0xea, 0x17, 0x41, 0xcd,
	0xda, 0x9d, 0x8f, 0xa0, 0x53, 0xda, 0x10, 0x0b, 0x2f, 0xd3, 0xeb, 0x71, 0xe1, 0x65, 0xd6, 0x42,
	0xf9, 0x0c, 0xba, 0x65, 0x46, 0x66, 0xb9, 0xee, 0x8c, 0xd5, 0xaf, 0xbf, 0x35, 0x53, 0x56, 0xd4,
	0x68, 0xa5, 0xf6, 0xc1, 0x60, 0x79, 0x19, 0x66, 0x7f, 0x48, 0x6e, 0x76, 0x77, 0x0c, 0xab, 0x53,
	0x2c, 0xcf, 0xee, 0xe6, 0x16, 0x1f, 0xe0, 0xff, 0xfe, 0x0c, 0x76, 0x60, 0xcf, 0x61, 0xa5, 0xc6,
	0x69, 0x45, 0x60, 0xb3, 0xb9, 0xae, 0xbf, 0x39, 0xed, 0x25, 0x27, 0xa5, 0x17, 0xb0, 0x5c, 0x9d,
	0xf2, 0xa2, 0x13, 0x66, 0xd2, 0x42, 0xd1, 0x09, 0xb3, 0xa9, 0xe1, 0xb0, 0xf1, 0xf3, 0x5c, 0x32,
	0x1c, 0xb6, 0xe8, 0xcf, 0xef, 0xa3, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x80, 0xd9, 0x4e, 0x3f,
	0x09, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LightningClient is the client API for Lightning service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightningClient interface {
	// obdcli: `hello`
	//hello is a `say hi` gRPC.
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	ConnectPeer(ctx context.Context, in *ConnectPeerRequest, opts ...grpc.CallOption) (*ConnectPeerResponse, error)
	DisconnectPeer(ctx context.Context, in *DisconnectPeerRequest, opts ...grpc.CallOption) (*DisconnectPeerResponse, error)
	OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelResponse, error)
	FundChannel(ctx context.Context, in *FundChannelRequest, opts ...grpc.CallOption) (*FundChannelResponse, error)
	ListChannels(ctx context.Context, in *ListChannelsRequest, opts ...grpc.CallOption) (*ListChannelsResponse, error)
	PendingChannels(ctx context.Context, in *PendingChannelsRequest, opts ...grpc.CallOption) (*ListChannelsResponse, error)
	LatestTransaction(ctx context.Context, in *LatestTransactionRequest, opts ...grpc.CallOption) (*Transaction, error)
	GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*TransactionDetails, error)
	//*
	//ChannelBalance returns a report on the total funds across all open channels,
	//categorized in
	//local/remote,
	//pending local/remote
	//and unsettled local/remote balances.
	ChannelBalance(ctx context.Context, in *ChannelBalanceRequest, opts ...grpc.CallOption) (*ChannelBalanceResponse, error)
}

type lightningClient struct {
	cc grpc.ClientConnInterface
}

func NewLightningClient(cc grpc.ClientConnInterface) LightningClient {
	return &lightningClient{cc}
}

func (c *lightningClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) ConnectPeer(ctx context.Context, in *ConnectPeerRequest, opts ...grpc.CallOption) (*ConnectPeerResponse, error) {
	out := new(ConnectPeerResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/ConnectPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) DisconnectPeer(ctx context.Context, in *DisconnectPeerRequest, opts ...grpc.CallOption) (*DisconnectPeerResponse, error) {
	out := new(DisconnectPeerResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/DisconnectPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) OpenChannel(ctx context.Context, in *OpenChannelRequest, opts ...grpc.CallOption) (*OpenChannelResponse, error) {
	out := new(OpenChannelResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/OpenChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) FundChannel(ctx context.Context, in *FundChannelRequest, opts ...grpc.CallOption) (*FundChannelResponse, error) {
	out := new(FundChannelResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/FundChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) ListChannels(ctx context.Context, in *ListChannelsRequest, opts ...grpc.CallOption) (*ListChannelsResponse, error) {
	out := new(ListChannelsResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/ListChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) PendingChannels(ctx context.Context, in *PendingChannelsRequest, opts ...grpc.CallOption) (*ListChannelsResponse, error) {
	out := new(ListChannelsResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/PendingChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) LatestTransaction(ctx context.Context, in *LatestTransactionRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/LatestTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*TransactionDetails, error) {
	out := new(TransactionDetails)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lightningClient) ChannelBalance(ctx context.Context, in *ChannelBalanceRequest, opts ...grpc.CallOption) (*ChannelBalanceResponse, error) {
	out := new(ChannelBalanceResponse)
	err := c.cc.Invoke(ctx, "/proxy.Lightning/ChannelBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightningServer is the server API for Lightning service.
type LightningServer interface {
	// obdcli: `hello`
	//hello is a `say hi` gRPC.
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
	ConnectPeer(context.Context, *ConnectPeerRequest) (*ConnectPeerResponse, error)
	DisconnectPeer(context.Context, *DisconnectPeerRequest) (*DisconnectPeerResponse, error)
	OpenChannel(context.Context, *OpenChannelRequest) (*OpenChannelResponse, error)
	FundChannel(context.Context, *FundChannelRequest) (*FundChannelResponse, error)
	ListChannels(context.Context, *ListChannelsRequest) (*ListChannelsResponse, error)
	PendingChannels(context.Context, *PendingChannelsRequest) (*ListChannelsResponse, error)
	LatestTransaction(context.Context, *LatestTransactionRequest) (*Transaction, error)
	GetTransactions(context.Context, *GetTransactionsRequest) (*TransactionDetails, error)
	//*
	//ChannelBalance returns a report on the total funds across all open channels,
	//categorized in
	//local/remote,
	//pending local/remote
	//and unsettled local/remote balances.
	ChannelBalance(context.Context, *ChannelBalanceRequest) (*ChannelBalanceResponse, error)
}

// UnimplementedLightningServer can be embedded to have forward compatible implementations.
type UnimplementedLightningServer struct {
}

func (*UnimplementedLightningServer) Hello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedLightningServer) ConnectPeer(ctx context.Context, req *ConnectPeerRequest) (*ConnectPeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnectPeer not implemented")
}
func (*UnimplementedLightningServer) DisconnectPeer(ctx context.Context, req *DisconnectPeerRequest) (*DisconnectPeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisconnectPeer not implemented")
}
func (*UnimplementedLightningServer) OpenChannel(ctx context.Context, req *OpenChannelRequest) (*OpenChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OpenChannel not implemented")
}
func (*UnimplementedLightningServer) FundChannel(ctx context.Context, req *FundChannelRequest) (*FundChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FundChannel not implemented")
}
func (*UnimplementedLightningServer) ListChannels(ctx context.Context, req *ListChannelsRequest) (*ListChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChannels not implemented")
}
func (*UnimplementedLightningServer) PendingChannels(ctx context.Context, req *PendingChannelsRequest) (*ListChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PendingChannels not implemented")
}
func (*UnimplementedLightningServer) LatestTransaction(ctx context.Context, req *LatestTransactionRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LatestTransaction not implemented")
}
func (*UnimplementedLightningServer) GetTransactions(ctx context.Context, req *GetTransactionsRequest) (*TransactionDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}
func (*UnimplementedLightningServer) ChannelBalance(ctx context.Context, req *ChannelBalanceRequest) (*ChannelBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChannelBalance not implemented")
}

func RegisterLightningServer(s *grpc.Server, srv LightningServer) {
	s.RegisterService(&_Lightning_serviceDesc, srv)
}

func _Lightning_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_ConnectPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).ConnectPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/ConnectPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).ConnectPeer(ctx, req.(*ConnectPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_DisconnectPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).DisconnectPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/DisconnectPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).DisconnectPeer(ctx, req.(*DisconnectPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_OpenChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).OpenChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/OpenChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).OpenChannel(ctx, req.(*OpenChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_FundChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FundChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).FundChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/FundChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).FundChannel(ctx, req.(*FundChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_ListChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).ListChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/ListChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).ListChannels(ctx, req.(*ListChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_PendingChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PendingChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).PendingChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/PendingChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).PendingChannels(ctx, req.(*PendingChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_LatestTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LatestTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).LatestTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/LatestTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).LatestTransaction(ctx, req.(*LatestTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).GetTransactions(ctx, req.(*GetTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lightning_ChannelBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightningServer).ChannelBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.Lightning/ChannelBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightningServer).ChannelBalance(ctx, req.(*ChannelBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lightning_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proxy.Lightning",
	HandlerType: (*LightningServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Lightning_Hello_Handler,
		},
		{
			MethodName: "ConnectPeer",
			Handler:    _Lightning_ConnectPeer_Handler,
		},
		{
			MethodName: "DisconnectPeer",
			Handler:    _Lightning_DisconnectPeer_Handler,
		},
		{
			MethodName: "OpenChannel",
			Handler:    _Lightning_OpenChannel_Handler,
		},
		{
			MethodName: "FundChannel",
			Handler:    _Lightning_FundChannel_Handler,
		},
		{
			MethodName: "ListChannels",
			Handler:    _Lightning_ListChannels_Handler,
		},
		{
			MethodName: "PendingChannels",
			Handler:    _Lightning_PendingChannels_Handler,
		},
		{
			MethodName: "LatestTransaction",
			Handler:    _Lightning_LatestTransaction_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _Lightning_GetTransactions_Handler,
		},
		{
			MethodName: "ChannelBalance",
			Handler:    _Lightning_ChannelBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
